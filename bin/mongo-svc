#!/bin/bash
################################################################################
#          FILE: mongo-svc
#         USAGE: 
#   DESCRIPTION: 
#       OPTIONS: --- 
#          BUGS: --- 
#         NOTES: --- 
#        AUTHOR: niuzhiqiang, niuzhiqiang90@foxmail.com
#  ORGANIZATION: 
#       CREATED: Sat 09 Sep 2017 12:31:34 AM CST
#      REVISION: 1.0.0
################################################################################

declare -r mongod_home="/usr/local/mongodb"
declare -r mongod_bin="./bin/mongod"
declare -r mongod_conf="./conf/mongod.conf"
# change the mongo log dir to your own
declare -r mongod_log="/mnt/data/dbs/mongodb/logs/mongod.log"
declare -r mongod_log_dir=$(dirname $mongod_log)

###############################################################################
# get mongod pid
##############################################################################
function get_mongod_pid()
{
    local mongod_pid=$(ps -ef | grep ${mongod_bin} | grep -v grep | awk '{print $2}')
    if [[ ${mongod_pid} -ne 0 ]]; then
        echo ${mongod_pid}
        return ${mongod_pid}
    fi
    return 0
}

###############################################################################
# start mongod 
# if the log dir and file not exist, create it 
##############################################################################
function start_mongod()
{
    local mongod_pid=$(get_mongod_pid)
    if [[ ${mongod_pid} -ne 0 ]]; then
        echo "mongod already running, PID=${mongod_pid}"
        exit
    fi
    pushd ${mongod_home} > /dev/null
    [[ ! -d ${mongod_log_dir} ]] && /bin/mkdir -p ${mongod_log_dir} && /usr/bin/touch ${mongod_log}
    ${mongod_bin} --config ${mongod_conf} 2>&1 >> $mongod_log &
    sleep 3
    local mongod_pid=$(get_mongod_pid)
    if [[ ${mongod_pid} -ne 0 ]]; then
        echo "mongod started..., PID=${mongod_pid}"
    else
	    echo "mongod start failed..."

    fi 
    popd > /dev/null
}

###############################################################################
# stop mongod 
##############################################################################
function stop_mongod()
{
    local mongod_pid=$(get_mongod_pid)
    if [[ ${mongod_pid} -ne 0 ]]; then
        ${mongod_home}/bin/mongo admin --eval "db.shutdownServer()"
	    echo "mongod quit..."
    else
        echo "mongod is stopped" 
    fi
}

###############################################################################
# get mongod status
##############################################################################
function get_mongod_status()
{
    local mongod_pid=$(get_mongod_pid)
    if [[ $mongod_pid -ne 0 ]]; then
        echo "mongod now is running, PID=${mongod_pid}"
    else
        echo "mongod is stopped"
    fi
}

###############################################################################
# print the log
##############################################################################
function view_log()
{
    pushd ${mongod_log_dir} > /dev/null
    /usr/bin/tail -f ${mongod_log}
    popd > /dev/null
}

###############################################################################
# print the usage
##############################################################################
function print_usage()
{
    echo "Usage: $0 {start|stop|restart|status|tail}"
    exit 1
}

###############################################################################
# the nain logic
##############################################################################
function main()
{
    [[ $# -ne 1 ]] && print_usage
    case "$1" in
    	start)
    		start_mongod
    		;;
    	stop)
    		stop_mongod
    		;;
    	restart)
    		stop_mongod
            sleep 1
    		start_mongod
    		;;
        status)
            get_mongod_status
            ;;
        tail)
            view_log
            ;;
    	*)
            print_usage
    esac
}

main $@
